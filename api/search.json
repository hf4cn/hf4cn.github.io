[{"id":"e61525ad7baca567af37b03545080bd8","title":"神奇的markdown用法","content":"前言这还需要什么前言吗，Markdown在现在几乎是最流行的写作标记语言，这个网页都是用Markdown写作之后生成的。Markdown本身既可以完成文本的格式化标记，也可以完成一部分的排版任务，当然，最重要的是Markdown对Html的友好程度，可以被完美的转换成Html文档。\n特色Markdown的语法非常简单易懂，简单到很难说是一种语言。它的设计是以Html规范为参考的，所以Markdown语言中的每一种标记都可以对应到一个Html标记上，这种标记语言的本质是对Html语言的简化，所以它和html是兼容的，你甚至可以在Markdown中直接写Html标记和段落，就是这么方便。\n\n语法Markdown语言中的语法无外乎是成对的标记以及直接引入Html元素，相应的，Markdown中的元素嵌套表现的也和Html相似。\n强调标记加粗如你所见这是一段被加粗的文字。对应Html中的&lt;b&gt;标记，使用的时候只需要用一对**括住需要被加粗的内容，就像这样：\n**如你所见这是一段被加粗的文字**\n斜体_如你所见这是一段斜体的文字_。对应Html中的&lt;i&gt;标记，使用的时候需要用一对_括住需要变成斜体的内容。\n_如你所见这是一段斜体的文字。_\n删除线这是一段需要被删除的文字。对应Html中的&lt;s&gt;标记，这个标记在Html5后已经不建议被使用。使用时用一对~~括住需要删除的内容。\n~~这是一段需要被删除的文字。~~\n下划线这是一段被下划线标记的文字。强烈不建议使用，会和超链接的表现产生冲突，这个标记在Html5后已经被废弃。Markdown并没有原生给下划线进行任何定义，原因参考上面的几点。如果必须使用下划线样式时需要用Html标签 &lt;u&gt;&lt;&#x2F;u&gt;括住需要标记的内容。\n&lt;u&gt;这是一段被下划线标记的文字。&lt;&#x2F;u&gt;\n标题层级跟Html一样，Markdown的标题共有6个层级。在Html中，标记标题需要用&lt;h1&gt;这样的标记来实现，而在Markdown中它被简化为了对应数量的#符号加上一个空格。比如这一块内容对应的标题就是### 标题层级，它同样可以被对应到&lt;h3&gt;标题层级&lt;/h3&gt;可以参考下表来对应标题内容：\n###### 标题6\n&lt;h6&gt;标题6&lt;&#x2F;h6&gt;\n\n##### 标题5\n&lt;h5&gt;标题5&lt;&#x2F;h5&gt;\n\n#### 标题4\n&lt;h4&gt;标题4&lt;&#x2F;h4&gt;\n\n### 标题3\n&lt;h3&gt;标题3&lt;&#x2F;h3&gt;\n\n## 标题2\n&lt;h2&gt;标题2&lt;&#x2F;h2&gt;\n\n# 标题1\n&lt;h1&gt;标题1&lt;&#x2F;h1&gt;\n分隔线分隔线在各类文档里是非常常用的，它对应Html中的&lt;hr&gt;元素，就像这样：\n\n在Markdown中分隔线有很多种写法，可以是三个及以上的*号、-号或者_号，它们中间可以穿插空格，但是重点在于，这一行中只能有这一种符号。\n***\n---\n___\n********\n- - - \n___________\n分隔线也被用来构成Yaml Front Matter，这是用来给文档定义一些元信息的区域。Yaml Front Matter必须位于文章的开头，由两个分隔线包裹，第二个分隔线在大部分时间里可以省略，但是可能会导致解释器将正文内容也认作元数据，所以建议使用两个分隔线包裹的方法。\n---\ntitle: 这是一个标题\ndate: 2022.02.22\n---\n不同的解释器会需求不同的元数据，但是大部分属性比如title,date等等一般是通用的，具体需要看你在哪里使用。\n引用\n\n\n\n\n\n\n\n\n溪云初起日沉阁，山雨欲来风满楼。\n这个标记对应Html中的&lt;q&gt;元素，可以引用一段文字，是做文档的时候非常常用的一种标记。使用这个标记很简单，只需要在一行的开头打一个&gt;号，然后空出下一行，这部分文字就可以被引用。\n&gt;溪云初起日沉阁，山雨欲来风满楼。\n\n如果需要使用多行引用可以在每一行的开头都加一个&gt;号，也可以在一行里加入Html的换行标记&lt;br&gt;。\n&gt;溪云初起日沉阁，\n&gt;山雨欲来风满楼。\n\n&gt;溪云初起日沉阁，&lt;br&gt;山雨欲来风满楼。\n\n他们的效果是一样的：\n\n\n\n\n\n\n\n\n\n溪云初起日沉阁，山雨欲来风满楼。\n同时，在引用的部分中，Markdown的其他标记都是可以正常使用的。\n代码块在整理一些程序相关的笔记的时候，代码块是相当常用的功能。这个标记对应Html中的&lt;code&gt;元素，使用的时候需要用一对```括住需要被包含的内容，例如&lt;p class=c1&gt;这是一些内容&lt;/p&gt;这个代码块就需要用的这样的方法使用：\n&#96;&#96;&#96;&lt;p class&#x3D;c1&gt;这是一些内容&lt;&#x2F;p&gt;&#96;&#96;&#96;\n除了在段落内使用以外，代码块同样可以单独出现，只需要在两对独占一行的```中插入需要包含的内容，同时也可以在第一个标记后插入需要高亮的语言，但是这个功能并非所有解释器都支持。\n\\&#96;&#96;&#96;markdown\n&lt;p class&#x3D;c1&gt;\n    这是一个段落哦\n&lt;&#x2F;p&gt;\n\\&#96;&#96;&#96;\n\n此处的\\仅仅只是防止这里的代码块被一块解释了，别真的把反斜杠也写进去了。\n\n列表就像Html一样，Makrdown可以插入有序列表和无序列表。\n无序列表\n这是一个项目\n\n\n这也是一个项目\n\n\n这还是一个项目\n\n对应Html中的&lt;ul&gt;元素，在Markdown中可以以-号、+号或者*号后加空格的方式添加在一行的起始，然后在最后一行列表后空出一行。\n- 这是一个项目\n+ 这也是一个项目\n* 这还是一个项目\n\n有序列表\n这是一个项目\n这也是一个项目\n这还是一个项目\n\n对应Html中的&lt;ol&gt;元素，可以以数字和一个英文句号后加一个空格的方式添加在一行的起始，其他和无序列表相同。\n1.  这是一个项目\n2.  这也是一个项目\n3.  这还是一个项目\n段落&amp;换行Markdown有一个和Html一样的史诗级难题，也就是段落和换行的关系问题。在Markdown中，定义一个文字块只需要在内容的上下各留一个空行，实际上对应了Html中的&lt;p&gt;标记，而换行当然也可以使用Html的换行标记&lt;br&gt;，不过还有一个更简单的方法，就是直接在一行的末尾输入两个空格，然后换行。\n超链接显然，没有超链接的文档会难用到难以想象。\n作为示例，这里显然需要有一个链接，比如你点这个链接就能打开百度。\n这个标记对应Html中的&lt;a&gt;元素，使用时需要用一对方括号括住需要显示的文本，然后跟一对圆括号包含需要指向的链接。当然直接用Html标签来插入也是完全可行的。\n[示例链接](http:&#x2F;&#x2F;dogekong.xyz)\n\n&lt;a herf&#x3D;&quot;http:&#x2F;&#x2F;dogekong.xyz&quot; target&#x3D;&quot;_blank&quot;&gt;示例链接&lt;&#x2F;a&gt;\n插入图片  \n没有图片的文档显然是很枯燥的，所以对应html中的&lt;img&gt;标签，markdown也提供方便使用的插入图片功能。插入上面的图片的语句如下：\n![来点可爱福瑞](.&#x2F;img\\img1.jpg &quot;来点可爱福瑞&quot;)\n\n&lt;img src&#x3D;&quot;.&#x2F;img\\img1.jpg&quot; alt&#x3D;&quot;来点可爱福瑞&quot; title&#x3D;&quot;来点可爱福瑞&quot;&gt;\n首先以感叹号 ! 作为起始，紧接着的方括号内输入图片的替代文本，然后在后续的圆括号中输入图片的相对链接或者绝对链接或者网络链接，可选加入图片的标题，需要在图片链接后空格分隔然后用一对引号包含对应的标题。这个图片当然也是可以内嵌超链接的，需要把整个图片部分作为超链接的文本用一对方括号括住，然后在后面跟一对圆括号输入指向的链接。\n[![来点可爱福瑞](.&#x2F;img\\img1.jpg &quot;来点可爱福瑞&quot;)](http:&#x2F;&#x2F;dogekong.xyz)\n效果就像这样：  \n\n转义字符很显然，有的时候你输入的内容里包含符号的时候很容易和markdown的标记符号冲突，显然markdown也提供了对应的解决方案，也就是转义字符。比如现在我需要输入 ** 这两个连续的符号，如果直接输入显然会导致后面的内容都被变成强调字体，所以我们可以在对应的符号前后各留一个空格，像这样：\n示例 ** 需要输入这两个符号。\n同样，也可以使用转义符 \\ 来防止符号被解释器误认成样式标记。  \n示例\\*\\*需要输入这两个符号。\n转义符本身也可以防止自己被转义，所以如果你需要输入 \\ 这个符号，你可以连续输入两个 \\ 符号。\n\\\\\n转义符也可以用来防止内嵌的html标签被解释，在写文档的时候有很重要的用途。比如我需要写&lt;p class&#x3D;c1&gt;xxx&lt;&#x2F;p&gt;这一段html，为了能让它正常被渲染为md文档，就需要这样：\n\\&lt;p class&#x3D;c1\\&gt;xxx\\&lt;&#x2F;p\\&gt;\n\n\n\n\n\n\n\n\n\n\n参考引用文档：Markdown 官方教程\n","slug":"MarkdownStudying-1","date":"2022-11-29T16:00:00.000Z","categories_index":"BlogThings","tags_index":"study,markdown,writing,html5","author_index":"BotKong"},{"id":"6d268819ceec39ccd61a2418561e1b60","title":"软测竞赛（一）","content":"前言手欠报了学校的软件测试竞赛，想着打一打比赛总归是有学分嫖，还是准备一下。但是只有一星期不到的时间确实是多少有点难搞，就不能早点通知吗（恼 。\n\n环境搭建这边的软测竞赛是基于selenium框架的，所以当然是要先用pip装框架。当然，这个安装过程是在Ubuntu环境里进行的，比Windows实在是舒服太多了 。首先用包管理器安装pip：\nsudo apt install pip\n然后要用pip安装对应的框架，为了解决国内访问pypi服务器速度悲惨需要指定国内的镜像站,这里使用清华大学的pypi源：\npip install selentium -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple \n当然，pip包管理器可以直接永久换源，不过比较麻烦，下次写到Python这部分的时候再说。安装完 框架后直接重启ide即可，现在直接在py里面引用这个包就可以了。\nfrom selentium import webdriver\n\n实例解题简单的找个例题来做一下，理解一下软件测试的测试这一部分。\n\n\n\n\n\n\n\n\n\n题目：按照以下步骤在 PyCharm 中进行自动化测试脚本编写，并执行脚本。步骤：（1）从 Selenium 中引入 WebDriver；（2）使用 Selenium 模块的 WebDriver 打开谷歌浏览器；（3）在谷歌浏览器中通过 get 方法发送网址打开人力资源综合服务系统登录页面；（4）查看登录页面中的用户名输入框元素，通过 xpath 属性定位用户名输入框，并输入用户名hrteacher；（5）查看登录页面中的密码输入框元素，通过 id 属性定位密码输入框，并输入密码 123456；（6）查看登录页面中的登录按钮元素，通过 css_selector 方法定位登录按钮，使用 click() 方法点击登录按钮进入人力资源综合服务系统首页对如上需求的实现如下：\n#从selenium中引入webdriver库\nfrom selenium import webdriver  \n#用webdriver启动chrome内核\ndriver &#x3D; webdriver.Chrome()  \n#通过get方法访问指定的页面\ndriver.get(&#39;http:&#x2F;&#x2F;192.168.47.6:49117&#x2F;suthr&#x2F;logon&#39;)  \n#通过xpath属性定位含有username的输入框，并输入hrteacher\ndriver.find_element_by_xpath(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;username&quot;]&#39;).send_keys(&#39;hrteacher&#39;)  \n#通过id属性定位含有password的输入框，并输入123456\ndriver.find_element_by_id(&#39;password&#39;).send_keys(&#39;123456&#39;)  \n#通过css选择器定位登录按钮并通过click方法点击按钮完成登录，定位按钮的元素需要在页面中浏览css查找。\ndriver.find_element_by_css_selector(&#39;#loginBtn&#39;).click()  \n\n末了这样就通过Python脚本完成了第一个测试例题，现在是时候倒头睡大觉了。算了，没得睡，还要把Java赶紧补上。算了还是明天Linux课再补吧，但是Linux课要拿来补觉，天。谁能救我，我不想要早八。\n","slug":"rcjs1","date":"2022-11-14T16:00:00.000Z","categories_index":"软测","tags_index":"study,web,competiton,python","author_index":"BotKong"},{"id":"829da55ca1db6cbd63bdfb2c4558e62f","title":"枪火重生皮肤mod制作教程","content":"\n欢迎来到这个文档站，由于开黑啦Kook的富文本输入实在是不太好写，这样的长篇教程就还是写在自己的文档站上了。\n在一切开始之前显然，在上一篇安装教程里提到过的备份这件事无论在什么时候都是一个好习惯，对于想要制作皮肤的你尤甚，在之后的过程中你可能会频繁的跟崩溃和报错打交道，所以好习惯当然是要提前准备好的啦。\n备份完成之后，我们就需要准备一些必要的软件了。\n对于游戏资源文件的解包和修改，我们需要 AssetsStudio 和 AssetBundleExtractor（UABE） 这两个软件。\n\n\nAssetsStudio ：GitHub\nAssetBundleExtractor（UABE）：GitHub\n考虑到Github在国内访问不稳定，也提供蓝奏云的备用链接：https://wwt.lanzout.com/iZaVz0alnpwh （不保证软件为最新）\n在此后的皮肤制作阶段，你当然需要准备其他的软件，比如 PhotoShop 或者 Krita 这样的图像编辑软件以及 Substance Painter 这样的模型编辑软件。当然，它们并不是唯一的，你应该选择最适合自己的软件程序。\n开始解包吧！先等等，在你开始解包之前，你应该多少有些一头雾水，&#x2F;assetbundles目录下包含了近2000个data起始的文件，这些文件到底对应了什么，你显然不会有什么头绪，这样的时候最简单粗暴的方法当然是把这些文件全都解包一遍来确定内容，但是这样实在是浪费时间而且不优雅，我已经为你准备好了所有武器的贴图模型和data文件的对应关系，它们被整理成了一张表格，你只需要按照自己需要的文件进行取用即可。\n\n什么，你说这些内容是怎么来的？当然是我简单粗暴的全都解包了一遍摸出来的。\n这份表格是完全免费的，它同样被我放在了蓝奏云里：\nhttps://wwt.lanzout.com/iYmBB0alnsgj  密码:6pmq\n这个表格仍旧是未完成版本，但是主要功能已经齐全，游戏版本更新时它也会随之更新。\n举个例子：我现在想要制作 烈日弹丸 的皮肤，从表格中我可以查到，它对应的data文件分别是 277（模型）和280（贴图）\n\n现在我们就可以打开 AssetsStudio 了，它的界面应该是这样的：\n\n制作皮肤首先需要用到贴图，所以我们在&#x2F;assetbundles中找到 data280 这个文件，将它拖进AssetsStudio的窗口中，然后选中Asset List选项卡。\n\n现在应该就能看到data文件的内容了，下一步我们需要将文件进行解包以方便编辑，选中工具栏中的Export &gt; All Assets然后选择一个你喜欢的文件夹导出其中的文件。\n\n然后，我们对包含了模型文件的 data277 也进行相同的操作，因为在皮肤制作的过程中我们会常用到武器的3d模型和贴图配合在模型编辑器中进行绘制。完成这些之后，你应该会在导出的文件夹中找到如下的文件：\n\n其中 Texture2D 中即为武器的贴图文件，而 Mesh 则包含了模型文件。\n贴图中一般包括以下的文件：\n\n不同的后缀名分别对应了不同的文件类型，c代表Color，即最底层的色彩纹理贴图；n代表Normal，即法线视差贴图；s代表shininess，即光度贴图\n解包步骤到这里也就结束了，在你完成对贴图文件的编辑之后，我们将要对文件进行打包替换。\n对Data文件进行修改现在我们可以打开UABE了，它的页面应该是这样的。\n\n在工具栏中找到 File &gt; open 选中你需要修改的文件，比如我们前面在为烈日弹丸制作皮肤，那么对应的存储贴图的data文件应该是 data280 ，在打开的窗口中进入**&#x2F;assetbundles**目录找到data280即可。\n\n然后一般会提醒你需要一个Decompressed-data的目录，选一个自己喜欢的目录即可。然后软件应该会来到数据库选择的窗口，在这里选择U2018.4.xfx。\n\n现在UABE里应该已经出现了你想替换的文件的内容了，点选 dataxxx（bundle），然后末尾以 （Assets） 结束的选项：\n\n终于来到了关键的一步，看到右侧出现的几个熟悉的文件名了吗（如果文件较多找不到你需要的贴图可以点击以下右侧项目栏里的Type类型进行排序，然后找到Type类型为Texture2D的即可），现在我们要用之前编辑好的贴图来替换文件内原本的贴图，比如我现在要将准备好的墨冰贴图导入替换原本的贴图，这个贴图属于Color贴图也即色彩纹理，所以我们选择这里的weapon_1205_c.png。\n现在右侧应该出现了这个文件相关的信息，我们选择Plugins &gt; Edit：\n\n现在应该会出现一个编辑贴图参数的弹窗：\n\n这里的其他参数我们会在日后再细讲（因为我也还没折腾明白），我们先选择下面的Load按钮，现在应该会弹出一个弹窗，让你选择需要替换的贴图，我们需要将已经做好的墨冰贴图放进去，所以在这里选择墨冰的color贴图。选择完成后点击OK即可完成替换步骤，Quality设置直接选择默认即可，然后项目中的Modified应该会被打上*号，表示这个文件被修改过了。\n\n现在我们可以重复这个操作，将 _n 结尾的贴图替换为法线贴图，将 _s 结尾的贴图替换为光度贴图。\n在完成对贴图文件的替换之后，我们就可以导出修改好的data文件了。\n首先再次在左侧选中 dataxxx（bundle） 。\n\n点选 File &gt;  Apply and save Selection \n\n然后就可以选一个自己喜欢的地方导出修改过的data文件了！\n当然，在把它打包成皮肤包发布之前，你还应该准备一个README.txt文档，用来告知用户使用这个皮肤时有什么需要知道的事情。\n这里提供一个范本，你可以在它的基础上自行修改：\n（如果你制作皮肤时使用了他人的素材请一并附上素材的发布链接和感谢条目）\n该mod为烈焰弹丸的墨冰主题皮肤，由 BotKong 制作并发布。mod在网络上免费发行，如果您通过付费渠道获得了该mod，请联系并告知作者（QQ：xxxxxxxxx）。\n\n请勿将mod用于商业用途，如需二次发布请先向作者寻求同意。\n\n感谢 克里罗斯魅子 制作的墨冰程序化材质。\n\n原视频链接：https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;BV1oU4y1w7jA\n\n在准备好了data文件和Readme文档之后，这个mod就可以打包准备发布了，我们也就成功来到了这篇教程的结尾。（P.S.记得先自己试试皮肤效果，不要发布一个不能用的皮肤包哦）\n","slug":"GFRB-Skin-1","date":"2022-08-30T16:00:00.000Z","categories_index":"Moding","tags_index":"gamedeveloping,unity,gunfirereborn,gaming,moding","author_index":"BotKong"},{"id":"6691464f05c7918ccb934617966dc7c9","title":"GameMakerStudio2 引擎学习记录（一）","content":"别看了，只是占个位置，还没写呢。\n","slug":"GMStudying-1","date":"2022-11-23T16:00:00.000Z","categories_index":"游戏开发","tags_index":"gamedeveloping,gml,gms2","author_index":"BotKong"},{"id":"773d88b0d2f6937f8bedcf349ed7e408","title":"关于这一堆CSS选择器","content":"前言上h5课的时候实在是有被这堆东西烦到，尤其是h5课是真的又慢又乱，所以几乎都没怎么听课，不过这玩意还是有一点点复杂度的，所以还是整理一下。css是有一堆用法的，比如可以在&lt;head&gt;部分里面用&lt;style&gt;标记定义一堆选择器，也可以直接在段落中直接加入style属性然后跟css内容，也可以单独用一个.css文件来引入这些css元素，不过虽然用法很花里胡哨，实际上里面写的内容倒是没什么太大的区别。 \n\n选择器CSS的选择器还是比较多的，而且命名都多多少少有点神奇，不过该用还是得用。\n元素选择器应该是最简单的一个选择器了，用法也很简单：元素&#123;&#125;然后这个选择器会选择文档中的所有对应元素添加CSS样式。\n类选择器形如.ClassName&#123;&#125;比较有用的选择器，使用这个选择器需要定义一个类名，然后在元素中加入class属性并填入对应的类名，例如：\n&lt;span class&#x3D;ClassName&gt;xxx&lt;&#x2F;span&gt;\n属性选择器形如：元素 [ 属性 / = 属性值 ]&#123;&#125;\np[color^&#x3D;red]&#123;&#125;\n属性选择器的功能主要是通过元素和对应的属性值来选择到对应的元素，比如例子中的选择器会选择&lt;body&gt;中所有在color属性值的前部包含red的p标记。其中的^符号表示前缀，$符号表示后缀，*符号表示包含这个选择器的特殊用法在于可以不指定前面的标记，直接全局指定所有符合条件的元素。例如：\n[color*&#x3D;red]&#123;&#125;\n这样会选中所有在color属性的属性值中包含red的标记。\n关系选择器形如：元素1（连接符）元素2&#123;&#125;关系选择器包含很多种用法，对应不同的连接符。\n子代选择器用&gt;连接符来指定，这个选择器会选择某个元素的第一级子元素，例如：\np&gt;strong&#123;&#125;\n这样会选择每一个p元素中的第一级strong子元素。\n临近兄弟选择器用+连接符来指定，这个选择器选择两个同级并且相邻的元素中的第二个元素。\np+h3&#123;&#125;\n例子中的选择器会选择一个在前面邻近p元素的h3元素，它们的关系大概是这样的：\n&lt;p&gt;......&lt;&#x2F;p&gt;\n&lt;h3&gt;......&lt;&#x2F;h3&gt;\n这样就会把定义的css样式应用到符合条件的h3元素中.\n普通兄弟选择器用~连接符来指定，这个选择器选择多个同级并且有前后关系的元素。\np~span&#123;&#125;\n这样会选择所有在p标记后的span元素。比如元素的关系是这样的：\n&lt;p&gt;...&lt;&#x2F;p&gt;\n&lt;span&gt;...&lt;&#x2F;span&gt;\n&lt;span&gt;...&lt;&#x2F;span&gt;\n这样后面的两个span元素都会被选择器选中。\n结构化伪类选择器也算是个小重点，这些选择器是CSS3标准中新加入的，这系列的选择器非常有用，可惜这里没有黑板可以敲，当然一般是我被用粉笔敲。（但是我真的好困啊）\n:root 根元素选择器:root&#123;&#125;这个选择器很简单，它会指定选择根元素&lt;html&gt;，换句话说，这个选择器可以用来定义整个Html文档的全局样式。\n:not 排除子元素选择器元素 *not:(子元素)&#123;...&#125;这个选择器的用法比较抽象，不过功能也很明确，它会排除被指定的子元素，给其他的子元素添加样式。例如：\nbody *not:(h1)&#123;\n    color: red\n&#125;\n这个选择器会给body元素中除了h1以外的所有子元素添加样式。\n:only-child 独生子元素选择器元素:only-child&#123;...&#125;很简单的一个选择器，如果一个元素是父元素的唯一子元素，那么就会选择这个元素。好像举不出什么例子，那就不举例子了。\n:first-child&amp;:last-child子元素选择器元素:first-child/last-child&#123;&#125;依旧是个很简单的选择器，选择一个元素的第一个子元素或者最后一个子元素，也是一个完全不需要举例子的选择器，合理偷懒。\n:nth-child(n)子元素选择器元素:nth-child(n)&#123;&#125;这个选择器可以用来选择正序的第n个子元素，但是n可以被even&#x2F;odd替代，被替代时，even会选择所有奇数子元素，而odd会选择所有偶数子元素。举一个例子：\nbody:nth-child(even)&#123;\n    color:red\n&#125;\nbody:nth-child(odd)&#123;\n    color:blue\n&#125;\n这样文档中对应奇数个的元素会被渲染成红色，而偶数个的会被渲染成蓝色。确实有点抽象。这个选择器还有一个变形，也就是:nth-last-child(n)&#123;&#125;，会以倒序计数。一些冷知识，这里的n可以用一些简单的一元函数，也就是说你可以用2n+0来代替odd，2n+1来代替even，但是这样真的不觉得很麻烦吗。\n:nth-of-type(n)子元素选择器这个选择器我也还没看明白，暂时跳过，会了再回来补上。\n:empty 空元素选择器没写完，下次再写。\n","slug":"css-selector-1","date":"2022-11-23T16:00:00.000Z","categories_index":"HTML5","tags_index":"study,html5,css3,web","author_index":"BotKong"},{"id":"3d81facc0f8a490d59d367d521462e98","title":"软测竞赛（二）","content":"前言Linux课太无聊了，先把其他的几个例题看一看，什么，你问我为什么不看java，因为这板子上没有Java Ide啊（\n\n例题\n\n\n\n\n\n\n\n\n（1）从 Selenium 中引入 WebDriver； （2）引 Selenium 中的 Select 模块； （3）使用 Selenium 模块的 WebDriver 打开谷歌浏览器； （4）在谷歌浏览器中通过 get 方法发送网址打开人力资源综合服务系统登 录页面； （5）增加智能时间等待 30 秒； （6）查看登录页面中的用户名输入框元素，通过 id 属性定位用户名输入框， 并输入用户名 hrteacher； （7）查看登录页面中的密码输入框元素，通过 xpath 属性定位密码输入框， 并输入密码 123456； （8）查看登录页面中的登录按钮元素，通过 class_name 方法定位登录按钮， 使用 click()方法点击登录按钮进入人力资源综合服务系统首页； （9）在人力资源综合服务系统首页查看左侧“个人证书”按钮元素，通过 link_text 方法进行定位，使用 click()方法点击“个人证书”按钮进入个人证书 页面； （10）在个人证书页面查看证书类别下拉框元素，通过 name 属性定位全部 状态下拉框,通过 Select 模块里面的 select_by_visible_text 方法选择下拉框 中的“学位证”选项。似乎跟上一题基本没什么区别，就是这回新增了一个select功能可用。\n#略\nfrom selenium import webdriver\n#引入select库\nfrom selenium.webdriver.support.select import select\n#操作浏览器\ndriver &#x3D; webdriver.Chrome()\n#访问指定页面\ndriver.get(&#39;http:&#x2F;&#x2F;192.168.47.6:49117&#x2F;suthr&#x2F;logon&#39;)\n#添加智能等待\ndriver.implicitly_wait(30)\n#这回是通过id属性来查找用户名输入框\ndriver.find_element_by_id(&#39;username&#39;).send_keys(&#39;hrteacher&#39;)\n#通过xpath属性来查找密码输入框\ndriver.fine_element_by_xpath(&#x2F;&#x2F;*[@id&#x3D;&quot;password&quot;]).send_keys(&#39;123456&#39;)\n#通过类名找到按钮,然后用Click方法触发\ndriver.find_element_by_class_name(&#39;btn&#39;).click()\n#通过链接文字属性找到个人证书按钮,然后用Click方法触发\ndriver.find_element_by_link_text(&#39;个人证书&#39;).click()\n#用Select模块选中下拉框内的学位证选项\nSelect(driver.find_element_by_name(&#39;dictCerType&#39;)).select_by_visible_text(&#39;学位证&#39;)\nSelect模块的用法其实就是通过find_element方法用name属性定位到文本框，然后通过可见文本选中其中的选项。\n\n后记然而我实际上并没来得及把这些例题全都做一遍，就得去学校办的这个什么比赛了，令人感慨。最后显然是比赛的时候碰到了不熟悉的题型然后光荣翻车，不过也算是因祸得福，混到了软测工作室的名额，所以以后blog里大概会常驻更新一些软测相关的东西的。好忙，感觉一直在给自己找到事情做，不过也算是非常的充实了。\n","slug":"rcjs2","date":"2022-11-15T16:00:00.000Z","categories_index":"软测","tags_index":"study,web,competiton,python","author_index":"BotKong"}]